--- a/src/mman/mmap.c	2020-11-06 14:33:14.588895081 +0100
+++ b/src/mman/mmap.c	2020-11-06 14:54:26.393274709 +0100
@@ -6,6 +6,9 @@
 #include "syscall.h"
 #include "libc.h"
 
+#include <uk/alloc.h>
+#include <uk/assert.h>
+
 static void dummy(void) { }
 weak_alias(dummy, __vm_wait);
 
@@ -26,11 +29,22 @@
 	if (flags & MAP_FIXED) {
 		__vm_wait();
 	}
+        if (start == NULL && fd == -1 && (flags & MAP_ANON)) {
+            start = NULL;
+            uk_posix_memalign(
+                    uk_alloc_get_default(),
+                    &start,
+                    4096, // TODO read actual page size
+                    len);
+            UK_ASSERT(start != NULL);
+            ret = (long) start;
+        } else {
 #ifdef SYS_mmap2
-	ret = __syscall(SYS_mmap2, start, len, prot, flags, fd, off/UNIT);
+            ret = __syscall(SYS_mmap2, start, len, prot, flags, fd, off/UNIT);
 #else
-	ret = __syscall(SYS_mmap, start, len, prot, flags, fd, off);
+            ret = __syscall(SYS_mmap, start, len, prot, flags, fd, off);
 #endif
+        }
 	/* Fixup incorrect EPERM from kernel. */
 	if (ret == -EPERM && !start && (flags&MAP_ANON) && !(flags&MAP_FIXED))
 		ret = -ENOMEM;
